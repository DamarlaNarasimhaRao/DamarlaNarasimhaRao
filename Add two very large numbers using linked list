#include <stdio.h>
#include <stdlib.h>
struct ListNode {
    int val;
    struct ListNode* next;
};
struct ListNode* createNode(int value) {
    struct ListNode* newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
    newNode->val = value;
    newNode->next = NULL;
    return newNode;
}
struct ListNode* add_linked_lists(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* dummy = createNode(0);
    struct ListNode* current = dummy;
    int carry = 0;
    while (l1 || l2 || carry) {
        int val1 = l1 ? l1->val : 0;
        int val2 = l2 ? l2->val : 0;
        int total = val1 + val2 + carry;
        carry = total / 10;
        current->next = createNode(total %10);
        current = current->next;
        if (l1) l1 = l1->next;
        if (l2) l2 = l2->next;
    }
    return dummy->next;
}
void print_linked_list(struct ListNode* head) {
    while (head) {
        printf("%d -> ", head->val);
        head = head->next;
    }
    printf("NULL\n");
}
int main() {
    struct ListNode* num1 = NULL;
    struct ListNode* num2 = NULL;
    int digit;
    printf("Enter the digits of the first number (enter -1 to stop): ");
    while (1) {
        scanf("%d", &digit);
        if (digit == -1) break;
        struct ListNode* newNode = createNode(digit);
        newNode->next = num1;
        num1 = newNode;
    }
    printf("Enter the digits of the second number (enter -1 to stop): ");
    while (1) {
        scanf("%d", &digit);
        if (digit == -1) break;
        struct ListNode* newNode = createNode(digit);
        newNode->next = num2;
        num2 = newNode;
    }
    struct ListNode* result = add_linked_lists(num1, num2);
    printf("Result: ");
    print_linked_list(result);
    while (result) {
        struct ListNode* temp = result;
        result = result->next;
        free(temp);
    }
    return 0;
}
